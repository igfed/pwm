@function strip-unit($number) {
    @if type-of($number) == 'number' and not unitless($number) {
        @return $number / ($number * (0 + 1));
    }

    @return $number;
}

@mixin horizontal-separator($target: "&", $thickness: .1rem, $spacing: 0, $height: 100%) {
    #{$target} {
        position: relative;
        margin-left: #{$spacing};

        &::after {
            border-left: #{$thickness} solid #c1cbd0;
            content: "";
            height: #{$height};
            left: -#{($spacing + $thickness) / 2};
            position: absolute;

            @if unit($height) == '%' {
                top: #{(100 - $height) / 2};
            } @else {
                top: 50%;
                margin-top: -#{$height / 2};
            }
        }
    }
}

@mixin vertical-separator($target: "&", $thickness: .1rem, $spacing: 0, $width: 100%) {
    #{$target} {
        position: relative;
        margin-top: #{$spacing};

        &::after {
            border-top: #{$thickness} solid #c1cbd0; //*
            content: "";
            width: #{$width}; //*
            top: -#{($spacing + $thickness) / 2}; //*
            position: absolute;

            @if unit($width) == '%' {
                left: #{(100 - $width) / 2}; //*
            } @else {
                left: 50%; //*
                margin-top: -#{$width / 2}; //*
            }
        }
    }
}

@mixin hide-text {
    font: 0/0 a;
    text-shadow: none;
    color: transparent;
}

@mixin aspect-ratio($width, $height, $contentSelector) {
    position: relative;
    &:before {
        display: block;
        content: "";
        width: 100%;
        padding-top: ($height / $width) * 100%;
    }
    > #{unquote($contentSelector)} {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
    }
}

@mixin scale($origWidth, $origHeight, $finalWidth) {
    width: $finalWidth;
    height: #{($origHeight / $origWidth) * $finalWidth};
}

@mixin column-gutter($gutter: 10rem) {
    padding-right: $gutter * .666;

    + .columns {
        padding-left: $gutter * .333;
        padding-right: $gutter * .333;

        &:last-child {
            padding-right: 0;
            padding-left: $gutter * .666;
        }
    }
}

@mixin info-toggle-base {
    .info-toggle-content {
        height: 0;
        overflow: hidden;
        transition: height .5s ease 0s;
    }

    .info-toggle-trigger {
        position: relative;
        cursor: pointer;

        .fa-chevron-down {
            position: absolute;
            font-size: 2rem;
            transform: rotate(0deg) translateY(-50%);
            margin-top: 1.1rem;
            right: 0;
            transition: transform .5s ease 0s, margin-top .5s ease 0s;
            color: $igGreen;
        }
    }

    &.active {
        .info-toggle-trigger {
            .fa.fa-chevron-down {
                transform: rotate(-180deg);
                margin-top: .7rem;
            }
        }
    }

    h2, h3 {
        transition: margin-bottom .5s ease 0s;
    }

    &:not(.active) {
        h2, h3 {
            margin-bottom: 0;
        }
        &.section {
            padding-bottom: 1.5rem;
        }
    }
}